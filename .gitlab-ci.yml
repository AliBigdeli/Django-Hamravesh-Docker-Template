stages: 
  # - test
  - build
  - deploy 



# # testing stage
# test:
#   # defining the stage name
#   stage: test

#   # only on stage
#   only:
#     refs:
#     - stage

#   # defining specific runners
#   tags:
#     - sama-runner

#   # defining the base image 
#   image: hub.hamdocker.ir/library/python:3.9-slim-buster

#   # defining the services which it depends on
#   services:
#     - name: hub.hamdocker.ir/library/postgres:13-alpine
#       alias: db

#   # scripts which needs to be run before main script
#   before_script:
#     - pip3 install -r requirements.txt
#     - cd ./core
#     - export DJANGO_SETTINGS_MODULE=core.settings

#   # main script for testing django app
#   script:
#     - python manage.py makemigrations
#     - python manage.py migrate
#     - pytest .

#   # variables for service and main image
#   variables:
#     DATABASE: postgres
#     POSTGRES_DB: postgres
#     POSTGRES_USER: postgres
#     POSTGRES_PASSWORD: postgres
#     DB_VENDOR: postgres
#     PGDATA: /var/lib/postgresql/data


# deployment stage
darkube_build:
  image: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
  only:
    refs:
    - stage
  script:
  - export IMAGE="registry.hamdocker.ir/<NAMESPACE>/<APP_NAME>"
  - 'darkube build --push -t $IMAGE:$CI_COMMIT_SHORT_SHA -t $IMAGE:$CI_COMMIT_REF_SLUG  --workdir
    . --file ./dockerfiles/stage/django/Dockerfile --build-context . '
  stage: build


darkube_deploy:
  image: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
  only:
    refs:
    - stage
  
  # defining specific runners
  tags:
    - sama-runner

  script:
  - darkube deploy --ref stage --token ${DARKUBE_configuration_sama_stage_DEPLOY_TOKEN} --app-id
    ${DARKUBE_configuration_sama_stage_APP_ID}  --image-tag "${CI_COMMIT_SHORT_SHA}" --job-id
    "${CI_JOB_ID}" --stateless-app true
  stage: deploy
