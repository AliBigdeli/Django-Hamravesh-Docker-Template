
# migration docs: https://docs.github.com/en/actions/migrating-to-github-actions/migrating-from-gitlab-cicd-to-github-actions
name: Django Project Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env: 
      PGDB_HOST: 127.0.0.1
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      working-directory: ./core
      run: python manage.py migrate
    - name: Run tests
      working-directory: ./core
      env:
        DJANGO_SETTINGS_MODULE: core.settings
      run: pytest .

  
  # Build:
  #   # if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
  #   name: Build
  #   # needs: Test

  #   # choosing which os to run on
  #   runs-on: ubuntu-latest

  #   # choosing darkube cli for building
  #   container: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
  #   steps:
  #   - name: checking out the code
  #     uses: actions/checkout@v3
      
  #   # name of the predefined env variables: https://docs.github.com/en/actions/learn-github-actions/variables
  #   - uses: FranzDiebold/github-env-vars-action@v2
  #   - name: Creating preneeded envs
  #     run: |
  #       echo "SHORT_SHA=`echo $CI_COMMIT_SHORT_SHA | cut -c1-8`" >> $GITHUB_ENV
  #       echo "CI_COMMIT_REF_SLUG=`echo $CI_REF_NAME_SLUG`" >> $GITHUB_ENV
      
  #   - name: Connect and build
  #     run: |
  #       'darkube build --push -t ${{ env.IMAGE }}:${{ env.CI_COMMIT_SHORT_SHA}} -t ${{ env.IMAGE }}:${{ env.CI_COMMIT_REF_SLUG }}  --workdir
  #       . --file ./dockerfiles/prod/django/Dockerfile --build-context . '


  # Deploy:
  #   if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
  #   name: Build

  #   # depends on build job
  #   needs: Build

  #   # choosing which os to run on
  #   runs-on: ubuntu-latest

  #   # choosing darkube cli for building
  #   container: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
  #   steps:

  #   # checking out the code
  #   - name: checking out the code
  #     uses: actions/checkout@v3
    
  #   # name of the predefined env variables: https://docs.github.com/en/actions/learn-github-actions/variables
    
  #   - uses: FranzDiebold/github-env-vars-action@v2
  #   - name: Creating preneeded envs
  #     run: |
  #       echo "SHORT_SHA=`echo $CI_COMMIT_SHORT_SHA | cut -c1-8`" >> $GITHUB_ENV
  #       echo "CI_COMMIT_REF_SLUG=`echo $CI_REF_NAME_SLUG`" >> $GITHUB_ENV
  #       echo "CI_JOB_ID=`echo $CI_RUN_ID`" >> $GITHUB_ENV
  #   - name: deploy
    
  #     run: |
  #       - darkube deploy --ref prod --token ${{ env.DARKUB_DEPLOY_TOKEN}} --app-id
  #         ${{ env.DARKUBE_APP_ID }}  --image-tag "${{ env.CI_COMMIT_SHORT_SHA}}" --job-id
  #         "${{ env.CI_JOB_ID }}" --stateless-app true

          